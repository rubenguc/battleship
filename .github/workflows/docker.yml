name: Battleship CI/CD

on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm
  
      - name: Install dependencies
        run: pnpm install
  
      - name: Run tests with coverage
        run: pnpm run coverage


  codeql:
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      packages: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
          
  docker:
    needs: [test, codeql]
    runs-on: ubuntu-latest
    if: |
      startsWith(github.event.head_commit.message, 'feat') ||
      startsWith(github.event.head_commit.message, 'fix') ||
      startsWith(github.event.head_commit.message, 'refactor') ||
      startsWith(github.event.head_commit.message, 'build')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract version from package.json
        id: version
        run: echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/battleship:${{ env.PACKAGE_VERSION }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/battleship:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/battleship:${{ env.PACKAGE_VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/battleship:latest
